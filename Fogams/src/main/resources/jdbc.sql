DROP SEQUENCE MEMBER_SEQ;
DROP SEQUENCE REVIEW_NO;
DROP SEQUENCE COMMENT_SEQ;
DROP SEQUENCE PAY_SEQ;
DROP SEQUENCE CHATLIST_SEQ;
DROP SEQUENCE PLANLIST_SEQ;
DROP SEQUENCE COMPANY_SEQ;
DROP SEQUENCE BOOKMARK_SEQ;


DROP TABLE MEMBER;
DROP TABLE REVIEW;
DROP TABLE COMMENT;
DROP TABLE PAY;
DROP TABLE CHAT;
DROP TABLE CHATLIST;
DROP TABLE PLANLIST;
DROP TABLE PLAN;
DROP TABLE COMPANY;
DROP TABLE COMPANY_PRICE;
DROP TABLE COMPANY_INFO;
DROP TABLE BOOKMARK;


CREATE SEQUENCE MEMBER_SEQ;
CREATE SEQUENCE REVIEW_NO;
CREATE SEQUENCE COMMENT_SEQ;
CREATE SEQUENCE PAY_SEQ;
CREATE SEQUENCE CHATLIST_SEQ;
CREATE SEQUENCE PLANLIST_SEQ;
CREATE SEQUENCE COMPANY_SEQ;
CREATE SEQUENCE BOOKMARK_SEQ;

drop table company

select company_img from company_info;
select * from member;
select * from company;
ALTER TABLE company ADD COMPANY_CONTENT VARCHAR2(2000) DEFAULT '애름다운곳' not null;
ALTER TABLE company ADD COMPANY_TEL VARCHAR2(30) DEFAULT '020989-3339' not null;
ALTER TABLE company ADD COMPANY_NUMBER VARCHAR2(30) DEFAULT '00099888' not null;
ALTER TABLE company ADD COMPANY_IMG VARCHAR2(200) DEFAULT '스크린샷 2020-12-16 오전 1.19.47.png' not null;
ALTER TABLE company ADD COMPANY_ADDR VARCHAR2(200) DEFAULT '경기도 어쩌구저쩌' not null;
ALTER TABLE company ADD company_city VARCHAR2(50) DEFAULT '경기도' not null;
ALTER TABLE company DROP COLUMN company_city;

company_no, company_name, member_no, company_sort, company_content, company_tel, company_number, company_img, company_addr

		SELECT COMPANY_NO, COMPANY_NAME, COMPANY_SORT, COMPANY_CITY, COMPANY_IMG
		FROM COMPANY
		WHERE COMPANY_CITY = '서울'
select * from member

SELECT * FROM BOOKMARK


CREATE TABLE COMPANY_INFO(

	COMPANY_CONTENT VARCHAR2(2000) NOT NULL,
	COMPANY_TEL VARCHAR2(30) NOT NULL,
	COMPANY_NUMBER VARCHAR2(30) NOT NULL,
	COMPANY_ADDR VARCHAR2(200) NOT NULL,
	COMPANY_IMG VARCHAR2(200),
);


SELECT COM.COMPANY_NO, COM.COMPANY_NAME, INFO.COMPANY_ADDR1
FROM COMPANY COM, COMPANY_INFO INFO
WHERE COM.COMPANY_NO = INFO.COMPANY_NO

insert into bookmark
values(BOOKMARK_SEQ.nextval, 1, 1)
where
(select m.member_id, b.member_no
from member m, bookmark b
where m.member_id = 'firstMember'
and m.member_no = b.member_no);


INSERT INTO 테이블명(특정 컬럼명)
VALUES(특정 컬럼 내용);

		
		SELECT COM.COMPANY_NO, COM.COMPANY_NAME, COM.COMPANY_SORT
		FROM COMPANY COM, COMPANY_INFO INFO
		WHERE INFO.COMPANY_ADDR1 LIKE '%서울%'
		AND COM.COMPANY_NO = INFO.COMPANY_NO
		

		
select com.company_no, com.company_name, com.company_sort
from company com, company_info info
where info.company_addr1 like '%서울%'
and com.company_no = info.company_no

insert into member
values(member_seq.nextval, 'firstMember', '12345678', '김모모', 'kaste91@naver.com', 1)

insert into company
values(COMPANY_SEQ.nextval, '맛나', 1 ,'음식점')

insert into company_info
values(1, '우와 서울의 맛집!', '01063631010', '1234567', '서울시 강남구 강남동 101-10', '123-123', '12345')


select DATA_TYPE  
from ALL_TAB_COLUMNS
where TABLE_NAME = 'company' ;



		SELECT COMPANY_INFO.COMPANY_NO, COMPANY.COMPANY_NAME
		FROM COMPANY_INFO, COMPANY
		WHERE COMPANY_INFO.COMPANY_ADDR1 LIKE '%서울%'


CREATE TABLE MEMBER(
	MEMBER_NO NUMBER PRIMARY KEY NOT NULL,
	MEMBER_ID VARCHAR2(20) UNIQUE NOT NULL,
	MEMBER_PW VARCHAR2(64) NOT NULL,
	MEMBER_NAME VARCHAR2(20) NOT NULL,
	MEMBER_EMAIL VARCHAR2(40) NOT NULL,
	MEMBER_GRADE NUMBER
);

CREATE TABLE COMPANY(
	COMPANY_NO NUMBER PRIMARY KEY,
	COMPANY_NAME VARCHAR2(100) NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	COMPANY_SORT VARCHAR2(20),
	CONSTRAINT FK_COMPANY_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);



CREATE TABLE REVIEW(
	REVIEW_NO NUMBER PRIMARY KEY,
	REVIEW_TITLE VARCHAR2(20) NOT NULL,
	REVIEW_CONTENT VARCHAR2(1000) NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	REVIEW_DATE DATE NOT NULL,
	PLAN_NO NUMBER NOT NULL,
	CONSTRAINT FK_REVIEW_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);

CREATE TABLE COMMENT(
	COMMENT_NO NUMBER PRIMARY KEY,
	COMMENT_CONTENT VARCHAR2(200) NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	REVIEW_NO NUMBER NOT NULL,
	COMMENT_DATE DATE NOT NULL,
	CONSTRAINT FK_COMMENT_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO),
	CONSTRAINT FK_COMMENT_REVIEW FOREIGN KEY(REVIEW_NO) REFERENCES REVIEW (REVIEW_NO)
);

CREATE TABLE PAY(
	PAY_NO NUMBER PRIMARY KEY,
	MEMBER_NO NUMBER NOT NULL,
	PAY_CONTENT VARCHAR2(200) NOT NULL,
	PAY_DATE DATE NOT NULL,
	COMPANY_NO NUMBER NOT NULL,
	CONSTRAINT FK_PAY_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO),
	CONSTRAINT FK_PAY_COMPANY FOREIGN KEY(COMPANY_NO) REFERENCES COMPANY (COMPANY_NO)
);

CREATE TABLE CHATLIST(
	CHAT_NO NUMBER PRIMARY KEY,
	COMPANY_NO NUMBER NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	CONSTRAINT FK_CHATLIST_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO),
	CONSTRAINT FK_CHATLIST_COMPANY FOREIGN KEY(COMPANY_NO) REFERENCES COMPANY (COMPANY_NO)
);
CREATE TABLE CHAT(
	CHAT_NO NUMBER NOT NULL,
	CHAT_CONTENT VARCHAR2(100) NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	CHAT_DATE DATE NOT NULL,
	CONSTRAINT FK_CHAT_CHATLIST FOREIGN KEY(CHAT_NO) REFERENCES CHATLIST (CHAT_NO)
);



CREATE TABLE PLANLIST(
	PLAN_NO NUMBER PRIMARY KEY,
	MEMBER_NO NUMBER NOT NULL,
	PLAN_DATE DATE NOT NULL,
	CONSTRAINT FK_PLANLIST_MEMBER_NO FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
);

CREATE TABLE PLAN(
	PLAN_NO NUMBER NOT NULL,
	COMPANY_NO NUMBER NOT NULL,
	PLAN_TIME DATE NOT NULL,
	PLAN_PRICE VARCHAR2(200) NOT NULL,
	CONSTRAINT FK_PLAN_PLANLIST FOREIGN KEY(PLAN_NO) REFERENCES PLANLIST (PLAN_NO)
);



CREATE TABLE COMPANY_PRICE(
	COMPANY_NO NUMBER NOT NULL,
	COMPANY_PRODUCT VARCHAR2(20) NOT NULL,
	COMPANY_MONEY VARCHAR2(20)  NOT NULL,
	CONSTRAINT FK_COMPANY_PRICE_COMPANY FOREIGN KEY(COMPANY_NO) REFERENCES COMPANY (COMPANY_NO)
);

CREATE TABLE COMPANY_INFO(
	COMPANY_NO NUMBER NOT NULL,
	COMPANY_CONTENT VARCHAR2(2000) NOT NULL,
	COMPANY_TEL VARCHAR2(30) NOT NULL,
	COMPANY_NUMBER VARCHAR2(30) NOT NULL,
	COMPANY_ADDR1 VARCHAR2(200) NOT NULL,
	COMPANY_ADDR2 VARCHAR2(200) NOT NULL,
	COMPANY_IMG VARCHAR2(200),
	CONSTRAINT FK_COMPANY_INFO_COMPANY FOREIGN KEY(COMPANY_NO) REFERENCES COMPANY (COMPANY_NO)
);

CREATE TABLE BOOKMARK(
	BOOKMARK_NO NUMBER PRIMARY KEY,
	COMPANY_NO NUMBER NOT NULL,
	MEMBER_NO NUMBER NOT NULL,
	CONSTRAINT FK_BOOKMARK_MEMBER FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER (MEMBER_NO),
	CONSTRAINT FK_BOOKMARK_COMPANY FOREIGN KEY(COMPANY_NO) REFERENCES COMPANY (COMPANY_NO)
);